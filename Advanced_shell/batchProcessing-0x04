#!/bin/bash

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
OUTPUT_DIR="pokemon_data_parallel"
LOG_FILE="error_log_parallel.txt"

mkdir -p "$OUTPUT_DIR"
: > "$LOG_FILE"

# Store PIDs of background jobs
PIDS=()

# Trap to clean up child processes if script is interrupted
trap 'echo "Terminating all background jobs..."; kill ${PIDS[*]} 2>/dev/null' EXIT

for POKEMON in "${POKEMONS[@]}"; do
    (
        echo "Fetching data for $POKEMON..."
        URL="https://pokeapi.co/api/v2/pokemon/$POKEMON"
        OUTPUT_FILE="$OUTPUT_DIR/${POKEMON}.json"

        curl -s -f "$URL" -o "$OUTPUT_FILE"
        if [ $? -eq 0 ]; then
            echo "Saved data to $OUTPUT_FILE ✅"
        else
            echo "❌ Failed to fetch data for $POKEMON" >> "$LOG_FILE"
        fi
    ) &
    PIDS+=($!)  # Store PID of background job
done

# Wait for all background jobs to finish
for PID in "${PIDS[@]}"; do
    wait "$PID"
done

# Clear the trap so it doesn't run on successful exit
trap - EXIT
echo "✅ All Pokémon data fetched in parallel."
